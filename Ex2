import java.util.Arrays;
import java.util.List;

public class Ex2 {

	

	public static void main(String[] args) {
		
		SeatMap seatMap = new SeatMap();
		
		seatMap.seats =  Arrays.asList(new Seat(3,2),new Seat(2,0),new Seat(0,2),new Seat(3,3),new Seat(2,2));
		
		List<List<Seat>> seatsOrd = seatMap.getlistSeatsOrd(seatMap);
		
		System.out.println("Lista Final: "+seatsOrd);

	}

}

// ===================================== Class Seat ========================================


public class Seat {
	private Integer x;
	private Integer y;

	public Seat() {}

	public Seat(Integer x, Integer y) {
		this.x = x;
		this.y = y;
	}

	public Integer getX() {
		return x;
	}

	public void setX(Integer x) {
		this.x = x;
	}

	public Integer getY() {
		return y;
	}

	public void setY(int y) {
		this.y = y;
	}

	@Override
	public String toString() {
		return "(x=" + x + ", y=" + y + ")";
	}

}

// ===================================== Class seatMap ======================================== 

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.stream.Collectors;

public class SeatMap {
	int width;
	int heigth;

	List<Seat> seats;

	public List<List<Seat>> getlistSeatsOrd(SeatMap seatMap) {

		List<Seat> seats = seatMap.getSeats();

		Collections.sort(seats, (s1, s2) -> s1.getY().compareTo(s2.getY()));
		System.out.println("Lista ordenada Y: "+seats);

		List<List<Seat>> listFinal = new ArrayList<List<Seat>>();
		seats.stream().forEach(s -> {
			List<Seat> collect = seats.stream().filter(s1 -> s1.getY().equals(s.getY())).collect(Collectors.toList());
			if (!listFinal.contains(collect)) {
				listFinal.add(collect);
			}
		});
		
		listFinal.stream().forEach(seats2 -> Collections.sort(seats2, (s1, s2) -> s1.getX().compareTo(s2.getX())));

		return listFinal;
	}

	public int getWidth() {
		return width;
	}

	public void setWidth(int width) {
		this.width = width;
	}

	public int getHeigth() {
		return heigth;
	}

	public void setHeigth(int heigth) {
		this.heigth = heigth;
	}

	public List<Seat> getSeats() {
		return seats;
	}

	public void setSeats(List<Seat> seats) {
		this.seats = seats;
	}

	@Override
	public String toString() {
		return "seatMap [width=" + width + ", heigth=" + heigth + ", seats=" + seats + "]";
	}

}
